// routes/qr.js const express = require('express'); const fs = require('fs'); const path = require('path'); const { default: makeWASocket, useSingleFileAuthState } = require('@whiskeysockets/baileys'); const { toDataURL } = require('qrcode');

const router = express.Router();

router.get('/:number', async (req, res) => { const number = req.params.number; const sessionFile = path.join(__dirname, ../sessions/${number}.json);

if (!fs.existsSync('./sessions')) fs.mkdirSync('./sessions');

const { state, saveState } = useSingleFileAuthState(sessionFile); const sock = makeWASocket({ auth: state });

let sent = false; sock.ev.on('creds.update', saveState); sock.ev.on('connection.update', async ({ connection, lastDisconnect, qr }) => { if (qr && !sent) { sent = true; const qrImage = await toDataURL(qr); return res.json({ qr: qrImage }); } if (connection === 'open') { console.log(✅ QR Session connected for ${number}); } if (connection === 'close') { console.log(❌ QR connection closed for ${number}); } }); });

module.exports = router;

